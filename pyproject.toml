[tool.poetry]
# The name of the package. Required
name = "brand-microservices"

# The version of the package. Required
version = "0.5.2"

# A short description of the package. Required
description = ""

# The license of the package. Optional, but it is highly recommended to supply this.
license = "MIT"

# The authors of the package. Required
authors = ["Jo達o Jesus <67010899+joaojesus81@users.noreply.github.com>","Jo達o Carlos Silva <jcvsilva@gmail.com>"]

# The maintainers of the package. Optional
# Maintainers may contain an email and be in the form name <email>.
maintainers = ["Jo達o Jesus <67010899+joaojesus81@users.noreply.github.com>","Jo達o Carlos Silva <jcvsilva@gmail.com>"]

# A path, or list of paths corresponding to the README file(s) of the package. Optional
readme = "README.md"

# An URL to the website of the project. Optional
# homepage = "https://python-poetry.org/"

# An URL to the repository of the project. Optional
repository = "https://github.com/duo-dinamico/brand-microservices"

# An URL to the documentation of the project. Optional
# documentation = "https://python-poetry.org/docs/"


[tool.poetry.dependencies]
# Poetry is configured to look for dependencies on PyPI by default.
# Only the name and a version string are required in this case.
# Be aware that declaring the python version for which your package is compatible is mandatory:
python = "^3.11"
fastapi = "0.92.0"
uvicorn = "^0.20.0"
SQLAlchemy = "^2.0.4"
alembic = "^1.8.1"
psycopg2-binary = "^2.9.5"
requests = "^2.28.1"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
python-multipart = "^0.0.5"


[tool.poetry.group.dev.dependencies]
# You can organize your dependencies in groups to manage them in a more granular way.
pytest = "^7.2.1"
black = "^23.1.0"
isort = "^5.12.0"
pre-commit = "^3.0.4"
httpx = "^0.23.3" # Transient !!!!!!
pytest-watch = "^4.2.0"


[build-system]
# PEP-517 introduces a standard way to define alternative build systems to build a Python project.
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
markers = [
    "user: run only tests related to users.",
    "brand: run only tests related to brands.",
    "categories: run only tests related to categories.",
    "app: run only tests related to the base functionalities.",
    "socials: run only tests related to socials",
    "brandsocials: run only tests related to brand socials"]
addopts = "-v -s --strict-markers"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.black]
line_length = 120

[tool.isort]
line_length = 120
profile = "black"
known_first_party = ["apis", "common"]

[tool.mypy]
plugins = "sqlalchemy.ext.mypy.plugin"
ignore_missing_imports = true
