"""update_ownership_fields

Revision ID: 0005
Revises: 0004
Create Date: 2023-03-09 20:22:14.033976

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "0005"
down_revision = "0004"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("brands", sa.Column("created_by_id", sa.UUID(), nullable=True))
    op.add_column("brands", sa.Column("updated_by_id", sa.UUID(), nullable=True))
    op.add_column("brands", sa.Column("deleted_by_id", sa.UUID(), nullable=True))
    op.drop_constraint("users_id_deleted_by", "brands", type_="foreignkey")
    op.drop_constraint("users_id_updated_by", "brands", type_="foreignkey")
    op.drop_constraint("users_id_created_by", "brands", type_="foreignkey")
    op.create_foreign_key("users_id_updated_by", "brands", "users", ["updated_by_id"], ["id"])
    op.create_foreign_key("users_id_deleted_by", "brands", "users", ["deleted_by_id"], ["id"])
    op.create_foreign_key("users_id_created_by", "brands", "users", ["created_by_id"], ["id"])
    op.drop_column("brands", "deleted_by")
    op.drop_column("brands", "created_by")
    op.drop_column("brands", "updated_by")
    op.add_column("categories", sa.Column("created_by_id", sa.UUID(), nullable=True))
    op.add_column("categories", sa.Column("updated_by_id", sa.UUID(), nullable=True))
    op.add_column("categories", sa.Column("deleted_by_id", sa.UUID(), nullable=True))
    op.drop_constraint("users_id_created_by", "categories", type_="foreignkey")
    op.drop_constraint("users_id_deleted_by", "categories", type_="foreignkey")
    op.drop_constraint("users_id_updated_by", "categories", type_="foreignkey")
    op.create_foreign_key("users_id_updated_by", "categories", "users", ["updated_by_id"], ["id"])
    op.create_foreign_key("users_id_deleted_by", "categories", "users", ["deleted_by_id"], ["id"])
    op.create_foreign_key("users_id_created_by", "categories", "users", ["created_by_id"], ["id"])
    op.drop_column("categories", "deleted_by")
    op.drop_column("categories", "created_by")
    op.drop_column("categories", "updated_by")
    op.add_column("users", sa.Column("updated_by_id", sa.UUID(), nullable=True))
    op.add_column("users", sa.Column("deleted_by_id", sa.UUID(), nullable=True))
    op.drop_column("users", "deleted_by")
    op.drop_column("users", "updated_by")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("users", sa.Column("updated_by", sa.UUID(), autoincrement=False, nullable=True))
    op.add_column("users", sa.Column("deleted_by", sa.UUID(), autoincrement=False, nullable=True))
    op.drop_column("users", "deleted_by_id")
    op.drop_column("users", "updated_by_id")
    op.add_column("categories", sa.Column("updated_by", sa.UUID(), autoincrement=False, nullable=True))
    op.add_column("categories", sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=True))
    op.add_column("categories", sa.Column("deleted_by", sa.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint("users_id_created_by", "categories", type_="foreignkey")
    op.drop_constraint("users_id_deleted_by", "categories", type_="foreignkey")
    op.drop_constraint("users_id_updated_by", "categories", type_="foreignkey")
    op.create_foreign_key("users_id_updated_by", "categories", "users", ["updated_by"], ["id"])
    op.create_foreign_key("users_id_deleted_by", "categories", "users", ["deleted_by"], ["id"])
    op.create_foreign_key("users_id_created_by", "categories", "users", ["created_by"], ["id"])
    op.drop_column("categories", "deleted_by_id")
    op.drop_column("categories", "updated_by_id")
    op.drop_column("categories", "created_by_id")
    op.add_column("brands", sa.Column("updated_by", sa.UUID(), autoincrement=False, nullable=True))
    op.add_column("brands", sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=True))
    op.add_column("brands", sa.Column("deleted_by", sa.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint("users_id_created_by", "brands", type_="foreignkey")
    op.drop_constraint("users_id_deleted_by", "brands", type_="foreignkey")
    op.drop_constraint("users_id_updated_by", "brands", type_="foreignkey")
    op.create_foreign_key("users_id_created_by", "brands", "users", ["created_by"], ["id"])
    op.create_foreign_key("users_id_updated_by", "brands", "users", ["updated_by"], ["id"])
    op.create_foreign_key("users_id_deleted_by", "brands", "users", ["deleted_by"], ["id"])
    op.drop_column("brands", "deleted_by_id")
    op.drop_column("brands", "updated_by_id")
    op.drop_column("brands", "created_by_id")
    # ### end Alembic commands ###
